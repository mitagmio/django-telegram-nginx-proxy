version: "3.8"

services:
  web:
    build: .
    container_name: dtb_django
    #command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "gunicorn dtb.asgi:application --bind 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker"
    restart: always
    volumes:
      - .:/code
      - ./dtb/static:/static
      - ./dtb/media:/media
    ports:
      - "8000:8000"
    env_file:
      - ./.env
      - ./.env_web
    depends_on:
      - db
  # bot: #for run localhost and long pooling
  #   build: .
  #   container_name: dtb_bot
  #   command: python run_pooling.py
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - web
  db:
    image: postgres:12
    container_name: dtb_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
      - ./.env_db
    ports:
      - "5433:5432"
  redis:
    image: redis:alpine
    container_name: dtb_redis
    restart: always
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    tty: true
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./dtb/static:/static
      - ./dtb/media:/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env_letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  celery:
    build: .
    container_name: dtb_celery
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
    restart: always
  celery-beat:
    build: .
    container_name: dtb_beat
    command: celery -A dtb beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme:
